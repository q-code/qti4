<?php

/**
* PHP version 7
*
* LICENSE: This source file is subject to version 3.0 of the PHP license
* that is available through the world-wide-web at the following URI:
* http://www.php.net/license. If you did not receive a copy of
* the PHP License and are unable to obtain it through the web, please
* send a note to license@php.net so we can mail you a copy immediately.
*
* @package    QuickTicket
* @author     Philippe Vandenberghe <info@qt-cute.org>
* @copyright  2015 The PHP Group
* @version    4.0 build:20230205
*/

session_start();
/**
 * @var CHtml $oH
 * @var array $L
 * @var string $warning
 * @var CDatabase $oDB
 */
require 'bin/init.php';
include translate('lg_adm.php');

if ( SUser::role()!=='A' ) die(L('E_13'));

// INITIALISE (note constant are all stored as string ini)

$oH->selfurl = 'qti_adm_sse.php';
$oH->selfname = 'SSE (server-sent events)';
$oH->selfparent = L('Settings');
$oH->exiturl = $oH->selfurl;
$oH->exitname = $oH->selfname;

// --------
// SUBMITTED
// --------

if ( isset($_POST['ok']) )
{
  if ( !QTisbetween($_POST['TIMEOUT'],10,120) ) { $error = 'SSE_TIMEOUT invalid (10-120 seconds)'; $_POST['TIMEOUT']='30'; }
  if ( !QTisbetween($_POST['CONNECT'],0,(int)$_POST['TIMEOUT']) ) { $error = L('sse_connect').' '.L('Invalid').' (0-'.$_POST['TIMEOUT'].' seconds)'; $_POST['CONNECT']='0'; }
  if ( empty($_POST['ORIGIN']) ) { $error = L('origin').' '.L('Invalid'); $_POST['ORIGIN']='http://localhost'; }
  if ( !QTisbetween($_POST['MAX_ROWS'],1,5) ) { $error = L('rows').' '.L('Invalid').' (0-5)'; $_POST['MAX_ROWS']='2'; }
  if ( !QTisbetween($_POST['LATENCY'],1,60) ) { $error = 'SSE_LATENCY invalid (1-60 seconds)'; $_POST['LATENCY']='10'; }
  if ( empty($_POST['SERVER']) ) $_POST['SERVER']='';


  // save (without SSE_ prefix. The prefix is added during initialisaiton)

  if ( empty($error) )
  {
    $_SESSION[QT]['sse']='CONNECT='.$_POST['CONNECT'].';ORIGIN='.$_POST['ORIGIN'].';MAX_ROWS='.$_POST['MAX_ROWS'].';TIMEOUT='.$_POST['TIMEOUT'].';LATENCY='.$_POST['LATENCY'];
    $oDB->exec( 'UPDATE TABSETTING SET setting="'.$_SESSION[QT]['sse'].'" WHERE param="SSE"');
    $oDB->exec( 'UPDATE TABSETTING SET setting="'.$_POST['SERVER'].'" WHERE param="SSE_SERVER"');
    SMem::set('settingsage',time());

    // save as constants in the ext directory
    $strFilename = 'ext/config_sse.php';
    $content = '<?php
define("SSE_CONNECT",'.(empty($_POST['CONNECT']) ? '0' : $_POST['CONNECT']).');
define("SSE_SERVER","'.$_POST['SERVER'].'");
define("SSE_ORIGIN","'.$_POST['ORIGIN'].'");
define("SSE_MAX_ROWS",'.$_POST['MAX_ROWS'].');
define("SSE_TIMEOUT",'.$_POST['TIMEOUT'].');
define("SSE_LATENCY",'.$_POST['LATENCY'].');

// DO NOT EDIT - This file is generated by the Administration panel.
// -----------------
// SSE (server-sent events) allows automatic update of the page content. To disable this set SSE_CONNECT to 0
// -----------------
// SSE_CONNECT: To enable SSE set a value in seconds (recommended 10). This is the delay before the client page re-connect server
// SSE_SERVER: Empty string if not using other server. If using an other server, path of the directory ext (with final /) ex: "http://www.domain.com/app/qti/"
// SSE_ORIGIN: Domain of the script sending the SSE events. ex: "http://localhost" if not using other server, otherwhise "http://www.domain.com"
// SSE_MAX_ROWS: Number of recent topics that can be added in the list of topics. When more topics arrive, the oldest is replaced. Recommended 2, maximum 5.
// SSE_TIMEOUT: Server message duration in seconds (recommended 30).
// SSE_LATENCY: This is the delay in seconds (recommended 10) before starting the sse process and updating the page content.
// About SSE polyfill: For legacy browser that does not support SSE, an auto-refresh is used (120 seconds). Setting SSE_CONNECT to 0 will also disable this auto-resh.
// When SSE is enabled following settings can be defined.
//
// Advanced setup:
// - If memcache and sse are on an other server, see about_ext.txt for configuration parametres.
// - SSE_ORIGIN is used as security control to reject messages coming from other servers. It is possible to enter here several origins (with semicolumn)
//   If the qti_srv_sse.php script (i.e. the server script) is on the same server as application, it must be http://localhost.';

    if ( file_exists($strFilename) && !is_writable($strFilename)) $error="Impossible to write into the file [$strFilename].";
    if ( empty($error) ) if (!$handle = fopen($strFilename, 'w')) $error="Impossible to open the file [$strFilename].";
    if ( empty($error) )
    {
    if ( fwrite($handle, $content)===FALSE ) $error="Impossible to write into the file [$strFilename].";
    fclose($handle);
    }
  }

  // exit
  $_SESSION[QT.'splash'] = (empty($error) ? L('S_save') : 'E|'.$error);
}

// --------
// HTML BEGIN (fieldnames are uppercase as they are used to define constants)
// --------

if ( !isset($_POST['CONNECT']) )  $_POST['CONNECT'] = defined('SSE_CONNECT')? SSE_CONNECT : 0;
if ( !isset($_POST['SERVER']) )   $_POST['SERVER']  = defined('SSE_SERVER')? SSE_SERVER : '';
if ( !isset($_POST['ORIGIN']) )   $_POST['ORIGIN']  = defined('SSE_ORIGIN')? SSE_ORIGIN : 'http://localhost';
if ( !isset($_POST['MAX_ROWS']) ) $_POST['MAX_ROWS']= defined('SSE_MAX_ROWS')? SSE_MAX_ROWS : 2;
if ( !isset($_POST['TIMEOUT']) )  $_POST['TIMEOUT'] = defined('SSE_TIMEOUT')? SSE_TIMEOUT : 30;
if ( !isset($_POST['LATENCY']) )  $_POST['LATENCY'] = defined('SSE_LATENCY')? SSE_LATENCY : 10;
// warning
if ( !empty( $_POST['ORIGIN']) )
{
  if ( substr($_POST['ORIGIN'],0,7)!=='http://' && substr($_POST['ORIGIN'],0,8)!=='https://' )$warning = L('Origin').' '.sprintf(L('Address_http'),'http','https');
}
if ( !empty( $_POST['SERVER']) )
{
  if ( substr($_POST['SERVER'],0,7)!=='http://' && substr($_POST['SERVER'],0,8)!=='https://' ) $warning = L('Server').' '.sprintf(L('Address_http'),'http','https');
}

include APP.'_adm_inc_hd.php';

// FORM

echo '
<form method="post" action="'.$oH->selfurl.'">
<h2 class="config">SSE</h2>
<table class="t-conf">
';
echo '<tr>
<th>'.L('Requery_status').'</th>
<td>
<span style="display:inline-block;width:16px;background-color:'.(empty($_POST['CONNECT']) ? 'red' : 'green').';border-radius:3px">&nbsp;</span> <span>'.L((empty($_POST['CONNECT'])?'Off' : 'On').'_line').'</span>
<span class="indent"><input required id="sse_connect" type="text" name="CONNECT" size="2" maxlength="2" value="'.$_POST['CONNECT'].'" pattern="[0-9]{1,2}" onchange="qtFormSafe.not();"/> '.L('seconds').'</span>
</td>
</tr>
';
echo '<tr>
<th>&nbsp;</th>
<td>';
if ( isset($L['SSE_1']) ) { echo $L['SSE_1']; } else { echo 'To enable SSE set a requery delay value (recommended 10 seconds).<br>To disable SSE, use 0.'; }
echo '</td>
</tr>
';
echo '<tr>
<th>'.L('Recent_messages').'</th>
<td><select id="sse_max_rows" name="MAX_ROWS" onchange="qtFormSafe.not();">'.asTags(array(1=>1,2,3,4,5),(int)$_POST['MAX_ROWS']).'</select></td>
</tr>
';
echo '<tr>
<th>&nbsp;</th>
<td>';
if ( isset($L['SSE_3']) ) { echo $L['SSE_3']; } else { echo 'Number of recent tickets that can be added on top of the section list.<br>When more topics arrive, the oldest is replaced.<br>Recommended 2.'; }
echo '</td>
</tr>
';
echo '<tr>
<th>'.L('External_server').'</th>
<td><select id="useServer" name="useServer" onchange="qtToggle(\'sse_server\',\'inline\');qtFormSafe.not();">'.asTags([L('N'),L('Y')],(empty($_POST['SERVER']) ? 0 : 1)).'</select>
 <input id="sse_server" type="text" name="SERVER" onchange="qtFormSafe.not();" size="50" style="display:'.(empty($_POST['SERVER']) ? 'none' : 'inline').'" placeholder="Path to ext directory, ex: https://srv01.domain.com/app/qti/" />
</td>
</tr>
';
echo '<tr>
<th>&nbsp;</th>
<td>';
echo isset($L['SSE_4']) ? $L['SSE_4'] : 'This is possible only if memcache and [ext] directory are on an other server.';
echo '</td>
</tr>
</table>
';

echo '<h2 class="config">'.L('Security').'</h2>
<table class="t-conf">
';
echo '<tr>
<th>'.L('Origin').'</th>
<td><input type="text" id="sse_origin" name="ORIGIN" size="50" maxlength="500" value="'.qtAttr($_POST['ORIGIN']).'" onchange="qtFormSafe.not();"/></td>
</tr>
';
echo '<tr>
<th>&nbsp;</th>
<td>';
if ( isset($L['SSE_2']) ) { echo $L['SSE_2']; } else { echo 'Origin is a security control required to reject messages coming from other servers. It\'s possible to enter here several origins (with semicolumn).<br>If the qti_sse.php script (the server script) is on the same server as the other pages, it must be http://localhost.<br><br>To identify the correct origin, put temporary http://x here, then check the javascript consol log on the index page. The origin will be reported after 10 seconds.'; }
echo '</td>
</tr>
</table>
';
echo '<p class="submit"><button type="submit" name="ok" value="ok">'.L('Save').'</button></p>
<input type="hidden" name="TIMEOUT" value="'.$_POST['TIMEOUT'].'"/>
<input type="hidden" name="LATENCY" value="'.$_POST['LATENCY'].'"/>
</form>
';

// HTML END

include APP.'_adm_inc_ft.php';